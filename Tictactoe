<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .game-container {
            text-align: center;
        }

        .game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            margin-bottom: 20px;
        }

        .tile {
            width: 100px;
            height: 100px;
            background-color: #ddd;
            border: 2px solid #ccc;
            border-radius: 5px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 48px;
            cursor: pointer;
            user-select: none;
        }

        .info {
            font-size: 24px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="game-container">
        <div class="info" id="info">Player X's turn</div>
        <div class="game-board" id="game-board"></div>
        <button onclick="resetGame()">Reset</button>
    </div>
    <script>
        const board = document.getElementById('game-board');
        const info = document.getElementById('info');
        let currentPlayer = 'X';
        let gameState = ['', '', '', '', '', '', '', '', ''];
        const winConditions = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function createBoard() {
            board.innerHTML = '';
            for (let i = 0; i < 9; i++) {
                const tile = document.createElement('div');
                tile.classList.add('tile');
                tile.dataset.index = i;
                tile.addEventListener('click', handleTileClick);
                board.appendChild(tile);
            }
        }

        function handleTileClick(event) {
            const tile = event.target;
            const index = tile.dataset.index;
            if (gameState[index] !== '' || checkWin()) {
                return;
            }
            gameState[index] = currentPlayer;
            tile.textContent = currentPlayer;
            if (checkWin()) {
                info.textContent = `Player ${currentPlayer} wins!`;
            } else if (gameState.includes('')) {
                currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
                info.textContent = `Player ${currentPlayer}'s turn`;
            } else {
                info.textContent = 'Draw!';
            }
        }

        function checkWin() {
            for (let condition of winConditions) {
                const [a, b, c] = condition;
                if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {
                    return true;
                }
            }
            return false;
        }

        function resetGame() {
            gameState = ['', '', '', '', '', '', '', '', ''];
            currentPlayer = 'X';
            info.textContent = `Player ${currentPlayer}'s turn`;
            createBoard();
        }

        createBoard();
    </script>
</body>
</html>
